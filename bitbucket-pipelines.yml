image: ubuntu:bionic

pipelines:
  default:
    - step:
        script:
          - apt-get update
          - apt -y install wget lsb-release gnupg
          - sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
          - sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-prerelease `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-prerelease.list'
          - wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -
          - apt-get update
          - apt-get -y install
            cmake build-essential curl git cppcheck g++-8 libyaml-dev
            libwebsockets-dev
            doxygen ruby-ronn libtinyxml2-dev software-properties-common
            clang-tidy-6.0 libclang-6.0-dev python-yaml libgflags-dev binutils-dev
          - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8 --slave /usr/bin/gcov gcov /usr/bin/gcov-8
          - gcc -v
          - g++ -v
          - gcov -v
          # lcov
          - git clone https://github.com/linux-test-project/lcov.git
          - cd lcov
          - make install
          - cd ..
          # Dependency: Ignition packages
          - apt-get -y install
            libignition-cmake2-dev
            libignition-common3-dev
            libignition-fuel-tools4-dev
            libignition-gui3-dev
            libignition-math6-dev
            libignition-math6-eigen3-dev
            libignition-msgs5-dev
            libignition-plugin-dev
            libignition-tools-dev
            libignition-rendering3-dev
            libignition-transport8-dev
            libsdformat9-dev
          # libignition-sensors3-dev
          # libignition-gazebo3-dev
          # libignition-physics2-dev
          # # Ignition msgs (uncomment if a specific branch is needed)
          # - apt install -y
          #   libprotobuf-dev protobuf-compiler libprotoc-dev
          # - git clone http://github.com/ignitionrobotics/ign-msgs -b master
          # - cd ign-msgs
          # - mkdir build
          # - cd build
          # - cmake ..
          # - make -j4 install
          # - cd ../..
          # # Ignition transport (uncomment if a specific branch is needed)
          # - apt install -y
          #   libzmq3-dev uuid-dev libsqlite3-dev
          # - git clone http://github.com/ignitionrobotics/ign-transport -b master
          # - cd ign-transport
          # - mkdir build
          # - cd build
          # - cmake .. -DBUILD_TESTING=false
          # - make -j4 install
          # - cd ../..
          # # SDFormat from source
          # - apt install -y
          #   libxml2-utils
          #   libtinyxml-dev
          # - git clone http://github.com/osrf/sdformat -b master
          # - cd sdformat
          # - mkdir build
          # - cd build
          # - cmake .. -DBUILD_TESTING=false
          # - make -j4 install
          # - cd ../..
          # # Ignition Rendering from source
          # - apt install -y
          #   libogre-1.9-dev libogre-2.1-dev libglew-dev libfreeimage-dev freeglut3-dev libxmu-dev libxi-dev uuid-dev xvfb
          # - git clone https://github.com/ignitionrobotics/ign-rendering -b master
          # - cd ign-rendering
          # - mkdir build
          # - cd build
          # - cmake .. -DBUILD_TESTING=false
          # - make install
          # - cd ../..
          # # Ignition GUI from source
          # - apt install -y
          #   qtbase5-dev libtinyxml2-dev
          #   libprotoc-dev
          #   libprotobuf-dev
          #   qtdeclarative5-dev
          #   qtquickcontrols2-5-dev
          #   qml-module-qtquick2
          #   qml-module-qtquick-controls
          #   qml-module-qtquick-controls2
          #   qml-module-qtquick-dialogs
          #   qml-module-qtquick-layouts
          #   qml-module-qt-labs-folderlistmodel
          #   qml-module-qt-labs-settings
          #   qml-module-qtgraphicaleffects
          # - git clone https://github.com/ignitionrobotics/ign-gui -b master
          # - cd ign-gui
          # - mkdir build
          # - cd build
          # - cmake .. -DBUILD_TESTING=false
          # - make install
          # - cd ../..
          # Ignition Physics from source
          - apt install -y
            dart6-data
            libdart6-collision-ode-dev
            libdart6-dev
            libdart6-utils-urdf-dev
            libbenchmark-dev
          - git clone https://github.com/ignitionrobotics/ign-physics -b master
          - cd ign-physics
          - mkdir build
          - cd build
          - cmake .. -DBUILD_TESTING=false
          - make install
          - cd ../..
          # Ignition Sensors from source
          - git clone https://github.com/ignitionrobotics/ign-sensors -b master
          - cd ign-sensors
          - mkdir build
          - cd build
          - cmake .. -DBUILD_TESTING=false
          - make install
          - cd ../..
          # Ignition Gazebo from source
          - git clone https://github.com/ignitionrobotics/ign-gazebo -b citadel_deps
          - cd ign-gazebo
          - mkdir build
          - cd build
          - cmake .. -DBUILD_TESTING=false
          - make install
          - cd ../..
          # Ignition Launch
          - mkdir build
          - cd build
          - cmake .. -DCMAKE_BUILD_TYPE=coverage
          - make -j4
          - make test ARGS="-VV"
          # - make coverage
          # Use a special version of codecov for handling gcc8 output.
          # - bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/4678d212cce2078bbaaf5027af0c0dafaad6a095/codecov) -X gcovout -X gcov
          # - make codecheck
          - cd ..
          - ./tools/clang_tidy.sh
